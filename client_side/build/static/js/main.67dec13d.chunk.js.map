{"version":3,"sources":["data/reducer/reducer.js","components/NavBar.js","Pages/Home.js","Pages/Signin.js","Pages/Profile.js","Pages/Signup.js","Pages/CreatePost.js","Pages/UsersProfile.js","Pages/SubscribedUserPosts.js","Pages/ResetPassword.js","Pages/NewPassword.js","App.js","serviceWorker.js","index.js"],"names":["reducer","state","action","type","payload","followers","following","profilePic","NavBar","searchModal","useRef","useState","search","setSearch","userDetails","setUserDetails","useContext","UserContext","dispatch","history","useHistory","useEffect","M","Modal","init","current","className","to","id","key","data-target","style","color","name","onClick","localStorage","clear","push","ref","placeholder","value","onChange","e","query","target","fetch","method","headers","body","JSON","stringify","then","res","json","results","userRecord","map","item","_id","getInstance","close","email","href","Home","dispath","dataImages","setDataImages","getItem","data","error","console","log","posts","index","postedBy","float","postid","result","newData","filter","toast","html","classes","catch","err","src","photo","likes","includes","postId","length","title","comments","comment","text","onSubmit","preventDefault","Signin","password","setPassword","setEmail","test","setItem","token","user","Profile","dataUserPics","setDataUserPics","setProfilePic","isShown","setIsShown","changePic","setChangePic","mypost","FormData","append","url","class","file","files","onMouseEnter","onMouseLeave","SignUp","setName","undefined","setUrl","uploadSignupFields","message","PostData","uploadProfilePic","CreatePost","setTitle","setBody","image","setImage","picUrl","postDetails","UsersProfile","dataOthersPics","setDataOthersPics","userid","useParams","showFollow","setShowFollow","followeeId","prevState","unfolloweeId","remFollower","SubscribedUserPosts","ResetPassword","NewPassword","createContext","Routing","parse","location","pathname","startsWith","exact","path","Signup","App","useReducer","Provider","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.67dec13d.chunk.js","sourcesContent":["export const initialState = null;\n\nexport const reducer = (state,action)=>{\n    if(action.type === \"USER\"){\n        return action.payload\n    }\n    if(action.type === \"CLEAR\"){\n        return null;\n    }\n    if(action.type === \"UPDATE\"){\n        return {\n            ...state,\n            followers:action.payload.followers,\n            following:action.payload.following \n        }\n    }\n    if(action.type === \"UPDATEPPIC\"){\n        return {\n            ...state,\n            profilePic:action.payload\n        }\n    }\n    return state;\n}","import React, { useContext, useRef, useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { UserContext } from '../App';\nimport M from 'materialize-css'\n\nconst NavBar = () => {\n  const searchModal = useRef(null);\n  const [search, setSearch] = useState(\"\");\n  const [userDetails,setUserDetails] = useState([]);\n  const { state, dispatch } = useContext(UserContext);\n  const history = useHistory();\n\n\n  useEffect(() => {\n    //check docs https://materializecss.com/modals.html\n    M.Modal.init(searchModal.current)\n  }, [])\n\n\n  //State is initially NULL!!!\n  const renderList = () => {\n    if (state) {\n      return [\n\n        <li key={\"1\"}><a><i data-target=\"modal1\" style={{ color: \"black\" }} className=\"material-icons modal-trigger\">search</i></a></li>,\n        <li key={\"3\"}><Link to=\"/mysubscribedposts\"><i style={{ color: \"black\" }} className=\"material-icons\">panorama</i></Link></li>,\n        <li key={\"5\"}><Link to=\"/createpost\"><i style={{ color: \"black\" }} className=\"material-icons\">add_a_photo</i></Link></li>,\n        <li key={\"4\"}><Link to=\"/profile\">Profile</Link></li>,\n        <li key={\"2\"}><a className=\"nav-user-name\"><strong>Hello, {state.name}!</strong></a></li>,\n        <button key={\"6\"}\n          className=\"waves-effect waves-light btn cyan lighten-2\"\n          onClick={() => {\n            localStorage.clear();\n            dispatch({ type: \"CLEAR\" })\n            history.push('/signin')\n          }}\n        >Sign Out\n        </button>\n      ]\n\n    } else {\n      return [\n        <li key={\"4\"}><Link to=\"/signin\">Signin</Link></li>,\n        <li key={\"5\"}><Link to=\"/signup\">Signup</Link></li>\n      ]\n    }\n  }\n\n  const fetchUserRecords = (query) =>{\n    setSearch(query);\n    fetch('/search-users',{\n      method:\"post\",\n      headers:{\n        \"Content-Type\":\"application/json\"\n      },\n      body:JSON.stringify({\n        query:query\n      })\n    }).then(res=>res.json())\n    .then(results=>{\n      setUserDetails(results.userRecord)\n    })\n  }\n\n  \n\n  return (\n    <nav>\n      <div className=\"nav-wrapper\">\n        <Link to={state ? \"/\" : \"/signin\"} className=\"brand-logo\">SHUTTER</Link>\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n          {renderList()}\n        </ul>\n      </div>\n      <div id=\"modal1\" className=\"modal\" ref={searchModal} style={{ color: \"black \" }}>\n        <div className=\"modal-content\">\n          <input\n            type=\"text\"\n            placeholder=\"Search Users\"\n            value={search}\n            onChange={(e) => { fetchUserRecords(e.target.value) }} \n          />\n          <ul className=\"collection\">\n            {userDetails.map(item=>\n              <Link to={ item._id !== state._id ? \"/profile/\" + item._id : \"/profile\"}>\n                <li key={item._id} className=\"collection-item\" onClick={()=>{\n                  M.Modal.getInstance(searchModal.current).close();\n                  setSearch(\"\");\n                }} >{item.email}</li>\n              </Link>\n            )}\n          </ul>\n        </div>\n        <div className=\"modal-footer\">\n          <button href=\"#!\" className=\"modal-close btn-flat\" onClick={()=>setSearch(\"\")} >Close</button>\n        </div>\n      </div>\n    </nav>\n\n  )\n}\n\nexport default NavBar","import React, { useEffect, useState, useContext } from 'react';\nimport { UserContext } from '../App';\nimport M from 'materialize-css';\nimport {Link, Redirect} from 'react-router-dom';\n\nconst Home = () => {\n    const { state, dispath } = useContext(UserContext);\n    const [dataImages, setDataImages] = useState([]);\n    //Dont need to check if user has TOKEN- ALREADY Logged IN\n    useEffect(() => {\n        fetch('/allpost', {\n            headers: {\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            }\n        }).then(res => res.json())\n            .then(data => {\n                if (!data.error) {\n                    console.log(data);\n                    setDataImages(data.posts)\n                }\n            })\n    }, [])\n\n    const likePost = (id) => {\n        fetch(\"/like\", {\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            },\n            body: JSON.stringify({\n                postId: id\n            })\n        }).then(res => res.json())\n            .then(result => {\n                //updated the LIKED Picture only\n                const newData = dataImages.map(item => {\n                    if (item._id == result._id) {\n                        return result;\n                    } else {\n                        return item;\n                    }\n                })\n                setDataImages(newData);\n            }).catch(err => {\n                console.log(err);\n            })\n    }\n\n    const unLikePost = (id) => {\n        fetch(\"/unlike\", {\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            },\n            body: JSON.stringify({\n                postId: id\n            })\n        }).then(res => res.json())\n            .then(result => {\n                const newData = dataImages.map(item => {\n                    if (item._id == result._id) {\n                        return result;\n                    } else {\n                        return item;\n                    }\n                })\n                setDataImages(newData);\n            }).catch(err => {\n                console.log(err);\n            })\n    }\n\n    const makeComment = (text, postId) => {\n        fetch(\"/comment\", {\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            },\n            body: JSON.stringify({\n                postId: postId,\n                text: text,\n            })\n        }).then(res => res.json())\n            .then(result => {\n                console.log(result);\n                const newData = dataImages.map(item => {\n                    if (item._id == result._id) {\n                        return result;\n                    } else {\n                        return item;\n                    }\n                })\n                setDataImages(newData);\n            }).catch(err => {\n                console.log(err);\n            })\n    }\n\n    const deletePost = (postid) => {\n        fetch(`/deletepost/${postid}`, {\n            method:\"delete\",\n            headers:{\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            }\n        }).then(res=>res.json())\n        .then(result =>{\n            console.log(result);\n            const newData = dataImages.filter(item => {\n                return item._id !== result.result._id\n            })\n            setDataImages(newData);\n        }).then(M.toast({html:\"Photo Deleted!\",classes:\"#64dd17 light-green accent-4\"}))\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    return (\n        <>\n        <div className=\"home\">\n              {dataImages.map((item, index) => {\n                return (\n                    <div key={item._id} className=\"card home-card\">\n                        <h5><Link to={item.postedBy._id !== state._id ? \"/profile/\" + item.postedBy._id: \"/profile\"}>{item.postedBy.name}</Link>{item.postedBy._id == state._id && <i style={{ float: \"right\" }} className=\"material-icons\" onClick={()=>deletePost(item._id)}>delete</i>}</h5>\n                        <div className=\"card-image\">\n                            <img src={item.photo} />\n                        </div>\n                        <div className=\"card-content\">\n                            {/* <i className=\"material-icons\">favorite_border</i> */}\n                            {item.likes.includes(state._id) ?\n                                <i className=\"material-icons\"\n                                    onClick={() => { unLikePost(item._id) }}\n                                >thumb_down</i> :\n                                <i className=\"material-icons\"\n                                    onClick={() => { likePost(item._id) }}\n                                >thumb_up</i>\n                            }\n                            <h6>{item.likes.length} Likes</h6>\n                            <h6>{item.title}</h6>\n                            <p>{item.body}</p>\n                            {item.comments.map((comment, index) => {\n                                return (\n                                    <h6 key={index +1}><strong>{comment.postedBy.name}</strong>{comment.text}</h6>\n                                )\n                            })}\n                            <form\n                                onSubmit={(e) => {\n                                    e.preventDefault();\n                                    makeComment(e.target[0].value, item._id)\n                                }}>\n                                <input type=\"text\" placeholder=\"add a comment\" />\n                            </form>\n\n                        </div>\n                    </div>\n                )\n            })}\n            \n\n        </div>\n        </>\n    )\n}\n\nexport default Home\n\n// \"_id\":\"5ec7c3a8ea923aaa085b9e89\",\n// \"text\":\"yes\",\n// \"postedBy\":\"5ec409d53ac3f8060eb667ea\"\n\n// {\"_id\":\"5ec7c5fc88bf08f452a451ac\",\n// \"text\":\"tessssst\",\n// \"postedBy\":{\n//     \"_id\":\"5ec409d53ac3f8060eb667ea\",\n//     \"name\":\"test\"}}","import React,{useState,useContext} from 'react';\nimport {Link, useHistory } from 'react-router-dom';\nimport {UserContext} from '../App'\nimport M from 'materialize-css';\n\nconst Signin = () => {\n    const {state,dispatch} = useContext(UserContext);\n    const history = useHistory();\n    const[password,setPassword] = useState(\"\");\n    const[email,setEmail] = useState(\"\");\n\n    const PostData=()=>{\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\n            M.toast({html: \"Invalid Email!\",classes:\"#b71c1c red darken-4\"});\n            return\n        } \n            fetch(\"/signin\",{\n                method:\"post\",\n                headers:{\n                    \"Content-Type\":\"application/json\"\n                },\n                body:JSON.stringify({\n                    email:email,\n                    password:password\n                })\n            }).then(res=>res.json())\n                .then(data=>{\n                    console.log(data)\n                    if(data.error){\n                        M.toast({html: data.error,classes:\"#b71c1c red darken-4\"});\n                    } \n                    else {\n                        //add local storage for token for authlogin\n                        localStorage.setItem(\"jwt\",data.token);\n                        localStorage.setItem(\"user\",JSON.stringify(data.user));\n                        dispatch({type:\"USER\",payload:data.user});\n                        M.toast({html:\"Signed in Successfully\",classes:\"#64dd17 light-green accent-4\"});\n                        history.push(\"/\");\n                    }\n                }).catch(error=>{\n                    console.log(error);\n                })\n    }\n\n    return (\n        <>\n            <div className=\"my-card\">\n                <div className=\"card auth-card input-field\">\n                    <h2 className=\"brand-logo\">SHUTTER</h2>\n                    <input\n                        type=\"text\"\n                        placeholder=\"email\"\n                        value={email}\n                        onChange={(e)=>{setEmail(e.target.value)}}\n                    />\n                    <input\n                        type=\"password\"\n                        placeholder=\"password\"\n                        value={password}\n                        onChange={(e)=>{setPassword(e.target.value)}}\n                    /> \n                    <button onClick={()=>PostData()} className=\"waves-effect waves-light btn cyan lighten-2\">Signin</button>\n                    <h5>\n                        <Link to=\"/signup\">\n                            Don't have an account?\n                        </Link>\n                    </h5>\n                    <h6>\n                        <Link to=\"/resetpassword\">\n                            Forgot Password?\n                        </Link>\n                    </h6>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Signin","import React, { useEffect, useState, useContext } from 'react';\nimport { UserContext } from '../App';\n\nconst Profile = () => {\n    const [dataUserPics, setDataUserPics] = useState([]);\n    const { state, dispatch } = useContext(UserContext);\n    const [profilePic, setProfilePic] = useState(\"\");\n    const [isShown, setIsShown] = useState(false);\n    const [changePic, setChangePic] = useState(false);\n    // const [url, setUrl] = useState(\"\");\n\n    console.log(state)\n\n\n    useEffect(() => {\n        fetch('/mypost', {\n            headers: {\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            }\n        }).then(res => res.json())\n            .then(data => {\n                if (!data.error) {\n                    // console.log(data);\n                    setDataUserPics(data.mypost)\n                }\n            })\n    }, [])\n\n    useEffect(() => {\n        if (profilePic) {\n            const data = new FormData();\n            data.append(\"file\", profilePic);\n            data.append(\"upload_preset\", \"photostory\");\n            data.append(\"cloud_name\", \"papenwors01\");\n            fetch(\"https://api.cloudinary.com/v1_1/papenwors01/image/upload\", {\n                method: \"post\",\n                body: data\n            })\n                .then(res => res.json())\n                .then(data => {\n                    // setUrl(data.url);\n                    console.log(data)\n                    // localStorage.setItem(\"user\",JSON.stringify({...state,profilePic:data.url}));\n                    // dispatch({type:\"UPDATEPPIC\", payload:data.url})\n                    fetch('/updateProfilePic', {\n                        method: \"put\",\n                        headers: {\n                            \"Content-Type\": \"application/json\",\n                            \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n                        },\n                        body: JSON.stringify({\n                            profilePic: data.url\n                        })\n                    }).then(res => res.json())\n                        .then(result => {\n                            console.log(result);\n                            localStorage.setItem(\"user\", JSON.stringify({ ...state, profilePic: result.profilePic }));\n                            dispatch({ type: \"UPDATEPPIC\", payload: result.profilePic })\n                        })\n                })\n                .catch(err => {\n                    console.log(err)\n                })\n        }\n    }, [profilePic])\n\n    const updateProfilePic = (file) => {\n        setProfilePic(file)\n        setChangePic(false)\n    }\n\n    return (\n        <>\n            {state && dataUserPics ? <div className=\"profile-wrap\">\n                <div className=\"upp-profile-wrapper\">\n                \n                    {changePic ?\n                        <div className=\"update-pic file-field input-field\">\n                            <div class=\"waves-effect waves-light btn cyan lighten-2\">\n                                <span>Update Picture\n                                                        <input\n                                        type=\"file\"\n                                        onChange={(e) => { updateProfilePic(e.target.files[0]) }}\n                                    />\n                                </span>\n                            </div>\n                            <div className=\"file-path-wrapper\">\n                                <input className=\"file-path validate\" type=\"text\" />\n                            </div>\n                        </div>\n                        : \n                        <img className=\"profile-pic-img\"\n                            src={state.profilePic}\n                            onMouseEnter={() => setIsShown(true)}\n                            onMouseLeave={() => setIsShown(false)}\n                            onClick={()=>setChangePic(true)}\n                         />\n                    }\n                    \n                    \n                    <div>\n                        \n                        <h4>\n                            {state.name}\n                        </h4>\n                        <div className=\"profile-stats\">\n                            <h6>{dataUserPics.length} Posts</h6>\n                            <h6>{state ? state.followers.length : \"0\"} Followers</h6>\n                            <h6>{state ? state.following.length : \"0\"} Following</h6>\n                        </div>\n                        {isShown && (<h6><strong>Change Profile Picture</strong></h6>)}\n                    </div>\n\n                </div>\n                <div className=\"gallery\">\n                    {dataUserPics.map((item, index) => {\n                        return <img key={index} className=\"gallery-img\" src={item.photo} />\n                    })}\n                </div>\n            </div>\n                : <p>\"Loading\"</p>}\n        </>\n    )\n}\n\nexport default Profile\n\n// const [isShown, setIsShown] = useState(false);\n\n// return (\n//     <div className=\"App\">\n//         <button\n//             onMouseEnter={() => setIsShown(true)}\n//             onMouseLeave={() => setIsShown(false)}>\n//             Hover over me!\n//       </button>\n//         {isShown && (\n//             <div>\n//                 I'll appear when you hover over the button.\n//             </div>\n//         )}\n//     </div>","import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport M from 'materialize-css';\n\nconst SignUp = () => {\n\n    const history = useHistory();\n    const [name, setName] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [profilePic, setProfilePic] = useState(null);\n    const [url, setUrl] = useState(undefined);\n\n    useEffect(()=>{\n        if(url){\n            uploadSignupFields();\n        }\n    },[url])\n\n\n    const uploadProfilePic = () =>{\n        const data = new FormData();\n        data.append(\"file\", profilePic);\n        data.append(\"upload_preset\", \"profile_images_photostory\");\n        data.append(\"cloud_name\", \"papenwors01\");\n        fetch(\"https://api.cloudinary.com/v1_1/papenwors01/image/upload\", {\n            method: \"post\",\n            body: data\n        })\n            .then(res => res.json())\n            .then(data => {\n                setUrl(data.url);\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n\n    const uploadSignupFields =() => {\n        if (!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)) {\n            M.toast({ html: \"Invalid Email!\", classes: \"#b71c1c red darken-4\" })\n            return\n        }\n        fetch(\"/signup\", {\n            method: \"post\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                name: name,\n                email: email,\n                password: password,\n                profilePic: url\n            })\n        }).then(res => res.json())\n            .then(data => {\n                if (data.error) {\n                    M.toast({ html: data.error, classes: \"#b71c1c red darken-4\" })\n                }\n                else {\n                    M.toast({ html: data.message, classes: \"#64dd17 light-green accent-4\" })\n                    history.push(\"/signin\")\n                }\n            }).catch(error => {\n                console.log(error)\n            })\n    }\n    const PostData = () => {\n        if(profilePic){\n            uploadProfilePic();\n        }else{\n            uploadSignupFields();\n        }\n\n\n        // Have to remove https:localhost:5000 from fetch() due to CORS error\n        //add proxy to package.json under main object header\n        //proxys forward to wherver we want to send requests\n    }\n    return (\n        <>\n            <div className=\"my-card\">\n                <div className=\"card auth-card input-field\">\n                    <h2 className=\"brand-logo\">SHUTTER</h2>\n                    <input\n                        type=\"text\"\n                        placeholder=\"name\"\n                        value={name}\n                        onChange={(e) => { setName(e.target.value) }}\n                    />\n                    <input\n                        type=\"text\"\n                        placeholder=\"email\"\n                        value={email}\n                        onChange={(e) => { setEmail(e.target.value) }}\n                    />\n                    <input\n                        type=\"password\"\n                        placeholder=\"password\"\n                        value={password}\n                        onChange={(e) => { setPassword(e.target.value) }}\n                    />\n                    <div class=\"file-field input-field\">\n                        <div class=\"waves-effect waves-light btn red lighten-1\">\n                            <span>Upload Image</span>\n                            <input type=\"file\"\n                                // value={body}\n                                onChange={(e) => { setProfilePic(e.target.files[0]) }}\n                            />\n                        </div>\n                        <div class=\"file-path-wrapper\">\n                            <input class=\"file-path validate\" type=\"text\" />\n                        </div>\n                    </div>\n                    <button onClick={() => { PostData() }} className=\"waves-effect waves-light btn cyan lighten-2\">Sign Up</button>\n                    <h5>\n                        <Link to=\"signin\">\n                            Already have an account?\n                        </Link>\n                    </h5>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default SignUp","import React,{useState,useEffect} from 'react';\nimport {Link, useHistory } from 'react-router-dom';\nimport M from 'materialize-css';\n\n\nconst CreatePost = () => {\n\n    const history = useHistory();\n    const[title,setTitle] = useState(\"\");\n    const[body,setBody] = useState(\"\");\n    const[image,setImage] = useState(\"\");\n    const[url,setUrl] = useState(\"\");\n\n    useEffect(()=>{\n        //if url exists\n        if(url){\n            fetch(\"/createpost\",{\n                method:\"post\",\n                headers:{\n                    \"Content-Type\":\"application/json\",\n                    \"Authorization\":\"Bearer \" + localStorage.getItem(\"jwt\")\n                },\n                body:JSON.stringify({\n                    title:title,\n                    body:body,\n                    picUrl:url,\n                })\n            }).then(res=>res.json())\n                .then(data=>{\n                    console.log(data);\n                    if(data.error){\n                        M.toast({html: data.error,classes:\"#b71c1c red darken-4\"});\n                    } \n                    else {\n                        M.toast({html:\"Post Created Successfully\",classes:\"#64dd17 light-green accent-4\"});\n                        history.push(\"/\");\n                    }\n                }).catch(error=>{\n                    console.log(error)\n                })\n        }\n    },[url])\n\n    //For posting to CloudServer forImagery\n    const postDetails= () => {\n        const data = new FormData();\n        data.append(\"file\",image);\n        data.append(\"upload_preset\",\"photostory\");\n        data.append(\"cloud_name\",\"papenwors01\");\n        fetch(\"https://api.cloudinary.com/v1_1/papenwors01/image/upload\",{\n            method:\"post\",\n            body:data\n        }) \n        .then(res=>res.json())\n        .then(data=>{\n            setUrl(data.url);\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n\n    return(\n        <div className=\"card input-filled\">\n            <input \n                type=\"text\" \n                placeholder=\"title\"\n                value={title}\n                onChange={(e)=>{setTitle(e.target.value)}}\n            />\n            <input \n                type=\"text\" \n                placeholder=\"body\"\n                value={body}\n                onChange={(e)=>{setBody(e.target.value)}}\n \n            />\n            <div class=\"file-field input-field\">\n                <div class=\"waves-effect waves-light btn red lighten-1\">\n                    <span>Upload Image</span>\n                    <input type=\"file\"\n                        // value={body}\n                        onChange={(e)=>{setImage(e.target.files[0])}}\n                    />\n                </div>\n                <div class=\"file-path-wrapper\">\n                    <input class=\"file-path validate\" type=\"text\"/>\n                </div>\n            </div>\n            <button onClick={()=>postDetails()}className=\"waves-effect waves-light btn red lighten-1\">Submit Post</button>\n        </div>\n    )\n}\n\nexport default CreatePost","import React,{ useEffect, useState, useContext } from 'react';\nimport { UserContext } from '../App';\nimport {useParams} from 'react-router-dom';\n\nconst UsersProfile = () => {\n    const [dataOthersPics, setDataOthersPics] = useState(null);\n    const {state,dispatch} = useContext(UserContext);\n    const {userid} = useParams();\n    //we use the includes() method should give a boolean answer.. we allow for state loading\n    const [showFollow,setShowFollow]= useState(state? !state.following.includes(userid):true);\n\n    // console.log(state);\n    // console.log(userid);\n\n    useEffect(()=>{\n        fetch(`/user/${userid}`, {\n            headers: {\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            }\n        }).then(res => res.json())\n            .then(result => {\n                // console.log(result)\n                setDataOthersPics(result);\n            })\n      },[])\n\n      const followUser= () =>{\n          fetch('/follow',{\n            method:\"put\",\n            headers: {\n                \"Content-Type\":\"application/json\",\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            },\n            body:JSON.stringify({\n                //userid from URL \n                followeeId: userid\n            })\n          }).then(res=>res.json())\n          .then(data=>{\n              console.log(data);\n              dispatch({type:\"UPDATE\",payload:{\n                  following:data.following,\n                  followers:data.followers\n              }})\n              //can only store string in localstorage\n              localStorage.setItem(\"user\",JSON.stringify(data))\n              //better to use call back function prevState\n              setDataOthersPics((prevState)=>{\n                  return{\n                      ...prevState,\n                      user:{\n                          ...prevState.user,\n                          followers:[...prevState.user.followers,data._id]\n                      }\n                  }\n              });\n              setShowFollow(false);\n          })\n      }\n\n      const unFollowUser= () =>{\n        fetch('/unfollow',{\n          method:\"put\",\n          headers: {\n              \"Content-Type\":\"application/json\",\n              \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n          },\n          body:JSON.stringify({\n              //userid from URL \n              unfolloweeId: userid\n          })\n        }).then(res=>res.json())\n        .then(data=>{\n            console.log(data);\n            dispatch({type:\"UPDATE\",payload:{\n                following:data.following,\n                followers:data.followers\n            }})\n            //can only store string in localstorage\n            localStorage.setItem(\"user\",JSON.stringify(data))\n            //better to use call back function prevState\n            setDataOthersPics((prevState)=>{\n                const remFollower = prevState.user.followers.filter(item=>item !== data._id);\n                return{\n                    ...prevState,\n                    user:{\n                        ...prevState.user,\n                        followers:remFollower\n                    }\n                }\n            });\n            setShowFollow(true);\n        })\n    }\n\n    return(\n\n        <>\n        { dataOthersPics ? <div className=\"profile-wrap\">\n            <div className=\"upp-profile-wrapper\">\n                <div>\n                    <img className=\"profile-pic\"\n                    src={dataOthersPics.user.profilePic}\n                    />\n                </div>\n                <div>\n                    <h4>{dataOthersPics.user.name}</h4>\n                    <h5>{dataOthersPics.user.email}</h5>\n                    <div className=\"profile-stats\">\n                        <h6>{dataOthersPics.posts.length} Posts</h6>\n                        <h6>{dataOthersPics.user.followers.length} Followers</h6>\n                        <h6>{dataOthersPics.user.following.length} Following</h6>\n                    </div>\n                    {showFollow? \n                    <button onClick={()=>followUser()} className=\"waves-effect waves-light btn red lighten-1\">Follow</button>:\n                    <button onClick={()=>unFollowUser()} className=\"waves-effect waves-light btn red lighten-1\">UnFollow</button>}\n                    \n                </div>\n            </div>\n            <div className=\"gallery\">\n                {dataOthersPics.posts.map((item,index)=>{\n                  return <img key={index} className=\"gallery-img\" src={item.photo}/>\n                })}\n            </div>\n            {/* <p>{JSON.stringify(dataOthersPics.user)}</p> */}\n        </div>\n        : <p>\"Loading\"</p> }\n        </>\n    )\n}\n\nexport default UsersProfile","import React, { useEffect, useState, useContext } from 'react';\nimport { UserContext } from '../App';\nimport M from 'materialize-css';\nimport {Link} from 'react-router-dom';\n\nconst SubscribedUserPosts = () => {\n    const { state, dispath } = useContext(UserContext);\n    const [dataImages, setDataImages] = useState([]);\n    //Dont need to check if user has TOKEN- ALREADY Logged IN\n    useEffect(() => {\n        fetch('/subscribeposts ', {\n            headers: {\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            }\n        }).then(res => res.json())\n            .then(data => {\n                if (!data.error) {\n                    console.log(data);\n                    setDataImages(data.posts)\n                }\n            })\n    }, [])\n\n    const likePost = (id) => {\n        fetch(\"/like\", {\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            },\n            body: JSON.stringify({\n                postId: id\n            })\n        }).then(res => res.json())\n            .then(result => {\n                //updated the LIKED Picture only\n                const newData = dataImages.map(item => {\n                    if (item._id == result._id) {\n                        return result;\n                    } else {\n                        return item;\n                    }\n                })\n                setDataImages(newData);\n            }).catch(err => {\n                console.log(err);\n            })\n    }\n\n    const unLikePost = (id) => {\n        fetch(\"/unlike\", {\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            },\n            body: JSON.stringify({\n                postId: id\n            })\n        }).then(res => res.json())\n            .then(result => {\n                const newData = dataImages.map(item => {\n                    if (item._id == result._id) {\n                        return result;\n                    } else {\n                        return item;\n                    }\n                })\n                setDataImages(newData);\n            }).catch(err => {\n                console.log(err);\n            })\n    }\n\n    const makeComment = (text, postId) => {\n        fetch(\"/comment\", {\n            method: \"put\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            },\n            body: JSON.stringify({\n                postId: postId,\n                text: text,\n            })\n        }).then(res => res.json())\n            .then(result => {\n                console.log(result);\n                const newData = dataImages.map(item => {\n                    if (item._id == result._id) {\n                        return result;\n                    } else {\n                        return item;\n                    }\n                })\n                setDataImages(newData);\n            }).catch(err => {\n                console.log(err);\n            })\n    }\n\n    const deletePost = (postid) => {\n        fetch(`/deletepost/${postid}`, {\n            method:\"delete\",\n            headers:{\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n            }\n        }).then(res=>res.json())\n        .then(result =>{\n            console.log(result);\n            const newData = dataImages.filter(item => {\n                return item._id !== result.result._id\n            })\n            setDataImages(newData);\n        }).then(M.toast({html:\"Photo Deleted!\",classes:\"#64dd17 light-green accent-4\"}))\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    return (\n        <div className=\"home\">   \n            {dataImages.map((item, index) => {\n                return (\n                    <div key={item._id} className=\"card home-card\">\n                        <h5><Link to={item.postedBy._id !== state._id ? \"/profile/\" + item.postedBy._id: \"/profile\"}>{item.postedBy.name}</Link>{item.postedBy._id == state._id && <i style={{ float: \"right\" }} className=\"material-icons\" onClick={()=>deletePost(item._id)}>delete</i>}</h5>\n                        <div className=\"card-image\">\n                            <img src={item.photo} />\n                        </div>\n                        <div className=\"card-content\">\n                            <i className=\"material-icons\">favorite_border</i>\n                            {item.likes.includes(state._id) ?\n                                <i className=\"material-icons\"\n                                    onClick={() => { unLikePost(item._id) }}\n                                >thumb_down</i> :\n                                <i className=\"material-icons\"\n                                    onClick={() => { likePost(item._id) }}\n                                >thumb_up</i>\n                            }\n                            <h6>{item.likes.length} Likes</h6>\n                            <h6>{item.title}</h6>\n                            <p>{item.body}</p>\n                            {item.comments.map((comment, index) => {\n                                return (\n                                    <h6 key={index +1}><strong>{comment.postedBy.name}</strong>{comment.text}</h6>\n                                )\n                            })}\n                            <form\n                                onSubmit={(e) => {\n                                    e.preventDefault();\n                                    makeComment(e.target[0].value, item._id)\n                                }}>\n                                <input type=\"text\" placeholder=\"add a comment\" />\n                            </form>\n\n                        </div>\n                    </div>\n                )\n            })}\n\n        </div>\n    )\n}\n\nexport default SubscribedUserPosts\n","import React,{useState,useContext} from 'react';\nimport {Link, useHistory } from 'react-router-dom';\nimport M from 'materialize-css';\n\nconst ResetPassword = () => {\n    const history = useHistory();\n    const[email,setEmail] = useState(\"\");\n\n    const PostData=()=>{\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\n            M.toast({html: \"Invalid Email!\",classes:\"#b71c1c red darken-4\"});\n            return\n        } \n            fetch(\"/resetpassword\",{\n                method:\"post\",\n                headers:{\n                    \"Content-Type\":\"application/json\"\n                },\n                body:JSON.stringify({\n                    email:email,\n                })\n            }).then(res=>res.json())\n                .then(data=>{\n                    if(data.error){\n                        M.toast({html: data.error,classes:\"#b71c1c red darken-4\"});\n                    } \n                    else {\n                        M.toast({html:data.message,classes:\"#64dd17 light-green accent-4\"});\n                        history.push(\"/signin \");\n                    }\n                }).catch(error=>{\n                    console.log(error);\n                })\n    }\n\n    return (\n        <>\n            <div className=\"my-card\">\n                <div className=\"card auth-card input-field\">\n                    <h2 className=\"auth-title\">SHUTTER</h2>\n                    <input\n                        type=\"text\"\n                        placeholder=\"email\"\n                        value={email}\n                        onChange={(e)=>{setEmail(e.target.value)}}\n                    />\n                    <button onClick={()=>PostData()} className=\"waves-effect waves-light btn red lighten-1\">Reset Password</button>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default ResetPassword","import React,{useState,useContext} from 'react';\nimport {Link, useHistory, useParams } from 'react-router-dom';\nimport M from 'materialize-css';\n\nconst NewPassword = () => {\n    const history = useHistory();\n    const[password,setPassword] = useState(\"\");\n    const {token} = useParams();\n    console.log(token);\n\n    const PostData=()=>{\n\n            fetch(\"/newpassword\",{\n                method:\"post\",\n                headers:{\n                    \"Content-Type\":\"application/json\"\n                },\n                body:JSON.stringify({\n                    password:password,\n                    token:token\n                })\n            }).then(res=>res.json())\n                .then(data=>{\n                    console.log(data)\n                    if(data.error){\n                        M.toast({html: data.error,classes:\"#b71c1c red darken-4\"});\n                    } \n                    else {\n                        M.toast({html:data.message,classes:\"#64dd17 light-green accent-4\"});\n                        history.push(\"/signin\");\n                    }\n                }).catch(error=>{\n                    console.log(error);\n                })\n    }\n\n    return (\n        <>\n            <div className=\"my-card\">\n                <div className=\"card auth-card input-field\">\n                    <h2 className=\"auth-title\">SHUTTER</h2>\n                    <input\n                        type=\"password\"\n                        placeholder=\"enter new password\"\n                        value={password}\n                        onChange={(e)=>{setPassword(e.target.value)}}\n                    /> \n                    <button onClick={()=>PostData()} className=\"waves-effect waves-light btn red lighten-1\">Update Password</button>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default NewPassword","import React, { useEffect, createContext, useReducer,useContext } from 'react';\nimport { BrowserRouter as Router, Route, Switch, useHistory } from 'react-router-dom';\nimport { reducer, initialState } from './data/reducer/reducer';\nimport './App.css';\n\nimport NavBar from './components/NavBar';\nimport Home from './Pages/Home';\nimport Signin from './Pages/Signin';\nimport Profile from './Pages/Profile';\nimport Signup from './Pages/Signup';\nimport CreatePost from './Pages/CreatePost';\nimport UsersProfile from './Pages/UsersProfile';\nimport SubscribedUserPosts from './Pages/SubscribedUserPosts';\nimport ResetPassword from './Pages/ResetPassword';\nimport NewPassword from './Pages/NewPassword';\n\n\n//Have to use useReducer with createContext-this now allows\nexport const UserContext = createContext()\n\n//moved Routes into serprated function for useHistory\n\nconst Routing = () => {\n  const history = useHistory();\n  const {state,dispatch} = useContext(UserContext);\n  useEffect(()=>{\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n   if(user){\n     dispatch({type:\"USER\",payload:user})\n   } else {\n     if(!history.location.pathname.startsWith('/resetpassword')){\n      history.push(\"/signin\")\n     }\n   }\n  },[])\n  return(\n    <Switch>\n      <Route exact path=\"/\">\n        <Home/>\n      </Route>\n      <Route path=\"/signin\">\n        <Signin/>\n      </Route>\n      <Route exact path=\"/profile\">\n        <Profile/>\n      </Route>\n      <Route path=\"/signup\">\n        <Signup/>\n      </Route>\n      <Route path=\"/createpost\">\n        <CreatePost/>\n      </Route>\n      <Route path=\"/profile/:userid\">\n        <UsersProfile/>\n      </Route>\n      <Route path=\"/mysubscribedposts\">\n        <SubscribedUserPosts/>\n      </Route>\n      <Route exact path=\"/resetpassword\">\n        <ResetPassword/>\n      </Route>\n      <Route path=\"/resetpassword/:token\">\n        <NewPassword/>\n      </Route>\n  </Switch>\n  )\n}\n\nfunction App() {\n  const [state,dispatch] = useReducer(reducer,initialState);\n  return (\n    <UserContext.Provider value={{state:state,dispatch}}>\n    <Router>\n      <NavBar/>\n      <Routing/>\n    </Router>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}